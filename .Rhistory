lest_error()
rlang::last_error()
IQR(early.growth,'growth')
IQR(early.growth,growth)
IQR(early.growth,'growth')
IQR(early.growth,as.str(growth))
rm(list=ls()) # Clean the workspace
# Load your packages here
library(dplyr)
library(readxl)
library(ggplot2)
library(stringr)
library(pander)
library(car)
# Interquartile range outlier removal
IQR <- function(data, variable) {
variable <- as.character(variable)
Q1 <- quantile(data[, variable], 0.25)
Q3 <- quantile(data[, variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
data <- subset(data, !between(data[, variable], lower_bound, upper_bound))
return(data)
}
early.global <- read.csv("C:/Nico/Github/Memoire/Early_growth_root_data/early global.csv")
early.data <- data.frame()
for (variete in c("Amiggo","Biggben","Hyperion","Juno","Swingg","Vegga")) {
early.global %>%
subset(grepl(substr(variete, start = 1, stop = 1),.$image)) %>%
mutate(variety=factor(variete)) %>%
select('root_name','root','diameter','root_ontology','parent','parent_name','variety') %>%
mutate(parent_diameter = ifelse(parent != '-1', diameter[match(parent, root)],NA)) %>%
mutate(ratio_diameter = ifelse(parent_name != '-1', diameter/parent_diameter, NA)) %>%
rbind(early.data,.) -> early.data
}
rm(early.global)
early.growth <- read.csv("C:/Nico/Github/Memoire/Early_growth_root_data/early growth.csv")
early.growth %>%
subset(root_name==' root_0') %>%
group_by(root) %>%
na.omit() %>%
filter(date == max(date)) %>%
mutate(growth = position/date) %>%
left_join(., early.data, by = "root") %>%
select('variety','root','position','date','growth','diameter') -> early.growth
IQR(early.growth,growth)
IQR(early.growth,growth) %>%
ggplot(aes(x=variety,y=growth))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(x='variete',
y='growth [cm/day]',
title='Primary root grotwh ')+
theme_classic()
IQR(early.growth,growth)
t <- IQR(early.growth,'growth')
# Interquartile range outlier removal
IQR <- function(data, variable) {
variable <- as.character(variable)
Q1 <- quantile(data[, variable], 0.25)
Q3 <- quantile(data[, variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
data <- subset(data, !between(data[, variable], lower_bound, upper_bound))
return(data)
}
# Interquartile range outlier removal
IQR <- function(data, variable) {
variable <- as.character(variable)
Q1 <- quantile(data[, variable], 0.25)
Q3 <- quantile(data[, variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
data <- subset(data, !between(data[, variable], lower_bound, upper_bound))
return(data)
}
# Interquartile range outlier removal
IQR <- function(data, variable) {
variable <- as.character(variable)
Q1 <- quantile(data[, variable], 0.25)
Q3 <- quantile(data[, variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
data <- subset(data, !between(data[, variable], lower_bound, upper_bound))
return(data)
}
# Interquartile range outlier removal
IQR <- function(data, variable) {
variable <- as.character(variable)
Q1 <- quantile(data[, variable], 0.25)
Q3 <- quantile(data[, variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
data <- subset(data, !between(data[, variable], lower_bound, upper_bound))
return(data)
}
# Interquartile range outlier removal
IQR <- function(data, variable) {
variable <- as.character(variable)
Q1 <- quantile(data[, variable], 0.25)
Q3 <- quantile(data[, variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
data <- subset(data, !between(data[, variable], lower_bound, upper_bound))
return(data)
}
IQR(early.growth,growth)
IQR(ealry.data,diameter)
t <- IQR(early.data,diameter)
t
r
t
print(t)
for(i in t) {print(i)}
# Interquartile range outlier removal
IQR <- function(data, variable) {
variable <- as.character(variable)
Q1 <- quantile(data[, variable], 0.25)
Q3 <- quantile(data[, variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
filtred_data <- data[data[[variable]] < lower_bound | data[[variable]] > upper_bound,]
return(filtred_data)
}
# Interquartile range outlier removal
IQR <- function(data, variable) {
variable <- as.character(variable)
Q1 <- quantile(data[, variable], 0.25)
Q3 <- quantile(data[, variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
filtred_data <- data[data[[variable]] < lower_bound | data[[variable]] > upper_bound,]
return(filtred_data)
}
early.global <- read.csv("C:/Nico/Github/Memoire/Early_growth_root_data/early global.csv")
early.data <- data.frame()
for (variete in c("Amiggo","Biggben","Hyperion","Juno","Swingg","Vegga")) {
early.global %>%
subset(grepl(substr(variete, start = 1, stop = 1),.$image)) %>%
mutate(variety=factor(variete)) %>%
select('root_name','root','diameter','root_ontology','parent','parent_name','variety') %>%
mutate(parent_diameter = ifelse(parent != '-1', diameter[match(parent, root)],NA)) %>%
mutate(ratio_diameter = ifelse(parent_name != '-1', diameter/parent_diameter, NA)) %>%
rbind(early.data,.) -> early.data
}
rm(early.global)
early.growth <- read.csv("C:/Nico/Github/Memoire/Early_growth_root_data/early growth.csv")
early.growth %>%
subset(root_name==' root_0') %>%
group_by(root) %>%
na.omit() %>%
filter(date == max(date)) %>%
mutate(growth = position/date) %>%
left_join(., early.data, by = "root") %>%
select('variety','root','position','date','growth','diameter') -> early.growth
IQR(early.growth,growth) %>%
ggplot(aes(x=variety,y=growth))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(x='variete',
y='growth [cm/day]',
title='Primary root grotwh ')+
theme_classic()
# Interquartile range outlier removal
IQR <- function(data, variable) {
Q1 <- quantile(data[, variable], 0.25)
Q3 <- quantile(data[, variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
filtred_data <- data[data[[variable]] < lower_bound | data[[variable]] > upper_bound,]
return(filtred_data)
}
# Interquartile range outlier removal
IQR <- function(data, variable) {
Q1 <- quantile(data[, variable], 0.25)
Q3 <- quantile(data[, variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
filtred_data <- data[data[[variable]] < lower_bound | data[[variable]] > upper_bound,]
return(filtred_data)
}
IQR(early.growth,'growth')
early.data
early.growth
Q1 <- quantile(early.growth[, 'growth'], 0.25)
Q1 <- quantile(early.growth$growth, 0.25)
Q1 <- quantile(early.growth[[, 'growth']], 0.25)
Q1 <- quantile(early.growth[['growth']], 0.25)
# Interquartile range outlier removal
IQR <- function(data, variable) {
Q1 <- quantile(data[variable], 0.25)
Q3 <- quantile(data[variable], 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
filtred_data <- data[data[[variable]] < lower_bound | data[[variable]] > upper_bound,]
return(filtred_data)
}
IQR(early.growth,'growth')
# Interquartile range outlier removal
IQR <- function(data, variable) {
Q1 <- quantile(data$variable, 0.25)
Q3 <- quantile(data$variable, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
filtred_data <- data[data$variable < lower_bound | data$variable > upper_bound,]
return(filtred_data)
}
# Interquartile range outlier removal
IQR <- function(data, variable) {
Q1 <- quantile(data$variable, 0.25)
Q3 <- quantile(data$variable, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
filtred_data <- data[data$variable < lower_bound | data$variable > upper_bound,]
return(filtred_data)
}
# Interquartile range outlier removal
IQR <- function(data, variable) {
Q1 <- quantile(data$variable, 0.25)
Q3 <- quantile(data$variable, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
filtred_data <- data[data$variable < lower_bound | data$variable > upper_bound,]
return(filtred_data)
}
early.global <- read.csv("C:/Nico/Github/Memoire/Early_growth_root_data/early global.csv")
early.data <- data.frame()
for (variete in c("Amiggo","Biggben","Hyperion","Juno","Swingg","Vegga")) {
early.global %>%
subset(grepl(substr(variete, start = 1, stop = 1),.$image)) %>%
mutate(variety=factor(variete)) %>%
select('root_name','root','diameter','root_ontology','parent','parent_name','variety') %>%
mutate(parent_diameter = ifelse(parent != '-1', diameter[match(parent, root)],NA)) %>%
mutate(ratio_diameter = ifelse(parent_name != '-1', diameter/parent_diameter, NA)) %>%
rbind(early.data,.) -> early.data
}
rm(early.global)
early.growth <- read.csv("C:/Nico/Github/Memoire/Early_growth_root_data/early growth.csv")
early.growth %>%
subset(root_name==' root_0') %>%
group_by(root) %>%
na.omit() %>%
filter(date == max(date)) %>%
mutate(growth = position/date) %>%
left_join(., early.data, by = "root") %>%
select('variety','root','position','date','growth','diameter') -> early.growth
IQR(early.growth,'growth')
IQR(early.growth,growth)
rlang::last_error()
rlang::last_trace()
early.growth %>%
ggplot(aes(x=variety,y=growth))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(x='variete',
y='growth [cm/day]',
title='Primary root grotwh ')+
theme_classic()
early.growth %>%
lm(growth ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
diameter_outliers <- function(data) {
Q1 <- quantile(data$diameter, 0.25)
Q3 <- quantile(data$diameter, 0.75)
IQR <- Q3 - Q1
lower <- Q1 - 1.5*IQR
upper <- Q3 + 1.5*IQR
data_clean <- data %>% filter(diameter >= lower & diameter <= upper)
return(data_clean)
}
# Boxplot nodal
subset(early.data, root_ontology==" Root") %>%
diameter_outliers(.) %>%
ggplot(aes(x=variety,y=diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='Primary root')+
theme_classic()
# Boxplot nodal
subset(early.data, root_ontology==" Root") %>%
ggplot(aes(x=variety,y=diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='Primary root')+
theme_classic()
View(early.data)
subset(early.data, root_name=="root_0")
# Boxplot nodal
subset(early.data, root_name==" root_0") %>%
ggplot(aes(x=variety,y=diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='Primary root')+
theme_classic()
subset(early.data, root_name==" root_0") %>%
ggplot(aes(x=variety,y=diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='Primary root')+
theme_classic()
subset(early.data, root_name==" root_0")
subset(early.data, root_name==" root_0") %>%
lm(diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
View(early.growth)
View(early.growth)
View(early.growth)
mod <- lm(growth~diameter*variety, data=early.growth)
summary(mod)
early.growth %>%
lm(growth ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
plot(mod)
summary(mod)
plot(mod)
plot(mod)
end.data <- data.frame()
for (variety in c("Amiggo","Biggben","Hyperion","Juno","Swingg","Vegga")) {
paste0("C:/Nico/Github/Memoire/End_growth_root_data/root_data/0.global_root_data/",variety,".csv") %>%
read.csv() %>%
mutate(variety = factor(variety)) %>%
select('root_name','root','diameter','root_ontology','parent','parent_name','variety') %>%
mutate(parent_diameter = ifelse(parent != '-1', diameter[match(parent, root)],NA)) %>%
mutate(ratio_diameter = ifelse(parent_name != '-1', diameter/parent_diameter, NA)) %>%
rbind(end.data,.) -> end.data
}
summary(end.data)
# Fichier avec nombre par noeud
node <- read_excel("End_growth_root_data/root_data/0.global_root_data/node.xlsx")
node$variety = as.factor(node$variety)
#PLot
ggplot(aggregate(number ~variety+node,data = node,FUN=mean),aes(x=node,y=number,color=variety)) +
geom_point(alpha = 0.5, size=3) +
geom_line()+
labs(color = "Variété",
x= "#node",
y= "# roots per node",
title = "nombre de racine par noeuds")
#Table
pander(left_join(
node %>% group_by(variety, node) %>% summarize(mean = mean(number)),
node %>% group_by(variety, node) %>% summarize(sd = sd(number))
))
# Boxplot nodal
subset(end.data, root_ontology==" Root") %>%
ggplot(aes(x=variety,y=diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='nodal root')+
theme_classic()
# Boxplot nodal
subset(end.data, root_ontology==" Root") %>%
diameter_outliers(.) %>%
ggplot(aes(x=variety,y=diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='nodal root')+
theme_classic()
subset(end.data, root_ontology==" Root") %>%
diameter_outliers(.) %>%
lm(diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
subset(end.data, root_ontology==" Root") %>%
lm(diameter ~ variety, data=.) -> mod
subset(end.data, root_ontology==" Root") %>%
lm(diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
subset(end.data, root_ontology==" Root") %>%
diameter_outliers(.) %>%
lm(diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
View(early.data)
end.data %>%
ggplot(aes(x=variety,y=ratio_diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='ratio root/parent_root')+
theme_gray()
View(end.data)
subset(end.data,root_ontology=='Lateral root')
subset(end.data,root_ontology==' Lateral root')
subset(end.data,root_ontology==' Lateral root') %>%
diameter_outliers(.) %>%
ggplot(aes(x=variety,y=ratio_diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='ratio root/parent_root')+
theme_gray()
subset(end.data,root_ontology==' Lateral root') %>%
diameter_outliers(.) %>%
lm(ratio_diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
subset(end.data,root_ontology==' Lateral root') %>%
lm(ratio_diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
subset(end.data, root_ontology==" Root") %>%
diameter_outliers(.) %>%
lm(diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
subset(end.data,root_ontology==' Lateral root') %>%
diameter_outliers(.) %>%
lm(ratio_diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
# Boxplot lateral
subset(end.data, root_ontology==" Lateral root") %>%
ggplot(aes(x=variety,y=diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='lateral root')+
theme_gray()
# Boxplot lateral
subset(end.data, root_ontology==" Lateral root") %>%
diameter_outliers(.) %>%
ggplot(aes(x=variety,y=diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='lateral root')+
theme_gray()
subset(end.data, root_ontology==" Lateral root") %>%
diameter_outliers(.) %>%
lm(diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
subset(end.data, root_ontology==" Lateral root") %>%
lm(diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
subset(end.data, root_ontology==" Lateral root") %>%
diameter_outliers(.) %>%
lm(diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
early.data %>%
ggplot(aes(x=variety,y=ratio_diameter))+
geom_boxplot()+
stat_summary(fun=mean, geom="point", shape=23, size=4)+
labs(title='ratio root/parent_root')+
theme_gray()
early.data %>%
lm(ratio_diameter ~ variety, data=.) -> mod
summary(mod)
pander(anova(mod))
par(mfrow = c(2,2))
plot(mod)
pander(leveneTest(mod, center = "median"))
mod <- lm(growth~diameter*variety, data=early.growth)
summary(mod)
plot(mod)
View(node)
