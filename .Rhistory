# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = variety)
# Stock la simulation dans sims
all_sims <- rbind(sims, rs)
}
for (variety in par$exportName) {
# Print l'avancé de la boucle
print(paste("Simulation pour :", variety))
#Update les paramètres
parames <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), subset(par,exportName==variety)[[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = variety)
# Stock la simulation dans sims
all_sims <- rbind(sims, rs)
}
for (variety in par$exportName) {
# Print l'avancé de la boucle
print(paste("Simulation pour :", variety))
#Update les paramètres
parames <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), subset(par,exportName==variety)[[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = variety)
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
View(sims)
sims <- NULL
sims <- NULL
setwd("ArchiSimple/src/archisimple93/")
for (variety in par$exportName) {
# Print l'avancé de la boucle
print(paste("Simulation pour :", variety))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), subset(par,exportName==variety)[[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = variety)
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
View(sims)
View(params)
rm(list = ls())
library(tidyverse)
library(data.table)
setwd("C:/Nico/Github/Memoire")
source("ArchiSimple/src/io_archisimple.R")
params <- read_archisimple_xml("base_parameter.xml")
rm(list = ls())
library(tidyverse)
library(data.table)
setwd("C:/Nico/Github/Memoire")
source("ArchiSimple/src/io_archisimple.R")
rm(list = ls())
library(tidyverse)
library(data.table)
setwd("C:/Nico/Github/Memoire")
source("ArchiSimple/src/io_archisimple.R")
params <- read_archisimple_xml("base_parameter.xml")
P_sim_length <- c(10,20)
P_dmax <- seq(1.2, 2, 0.1)
par <- data.frame(P_sim_length = rep(140,6),
exportName=c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga'),
dmin=c(      0.1567  ,0.1567  ,0.1567   ,0.1567  ,0.1567  ,0.1297),
RDM = c(     0.1874  ,0.2022  ,0.228    ,0.17545 ,0.1745  ,0.1611),
CVDD = c(    0.3     ,0.3     ,0.3      ,0.3     ,0.3     ,0.3))
sims <- NULL
setwd("ArchiSimple/src/archisimple93/")
for (variety in par$exportName) {
# Print l'avancé de la boucle
print(paste("Simulation pour :", variety))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), subset(par,exportName==variety)[[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = variety)
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
setwd("../../../")
all_sims <- NULL # Table to containn all the simulation data
View(sims)
View(params)
rm(list = ls())
library(tidyverse)
library(data.table)
setwd("C:/Nico/Github/Memoire")
source("ArchiSimple/src/io_archisimple.R")
params <- read_archisimple_xml("base_parameter.xml")
P_sim_length <- c(10,20)
P_dmax <- seq(1.2, 2, 0.1)
par <- data.frame(sim_length = rep(140,6),
exportName=c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga'),
dmin=c(      0.1567  ,0.1567  ,0.1567   ,0.1567  ,0.1567  ,0.1297),
RDM = c(     0.1874  ,0.2022  ,0.228    ,0.17545 ,0.1745  ,0.1611),
CVDD = c(    0.3     ,0.3     ,0.3      ,0.3     ,0.3     ,0.3))
sims <- NULL
setwd("ArchiSimple/src/archisimple93/")
for (variety in par$exportName) {
# Print l'avancé de la boucle
print(paste("Simulation pour :", variety))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), subset(par,exportName==variety)[[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = variety)
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
setwd("../../../")
View(params)
## From the side
sims %>%
ggplot() +
theme_classic() +
geom_segment(aes(x = X1, y = -Z1, xend = X2, yend = -Z2), alpha=0.9) +
coord_fixed() +
facet_wrap(variety)
View(sims)
## From the side
sims %>%
ggplot() +
theme_classic() +
geom_segment(aes(x = X1, y = -Z1, xend = X2, yend = -Z2), alpha=0.9) +
coord_fixed() +
facet_wrap(variety)
## From the side
sims %>%
ggplot() +
theme_classic() +
geom_segment(aes(x = X1, y = -Z1, xend = X2, yend = -Z2), alpha=0.9) +
coord_fixed()
sims <- NULL
setwd("ArchiSimple/src/archisimple93/")
for (variety in par$exportName) {
# Print l'avancé de la boucle
print(paste("Simulation pour :", variety))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), subset(par,exportName==variety)[[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
setwd("../../../")
## From the side
sims %>%
ggplot() +
theme_classic() +
geom_segment(aes(x = X1, y = -Z1, xend = X2, yend = -Z2), alpha=0.9) +
coord_fixed() +
facet_wrap(variety)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
3620*6
View(sims)
subset(par,exportName=='variety'Amiggo'')
subset(par,exportName=='variety'Amiggo')
subset(par,exportName==Amiggo')
subset(par,exportName=='Amiggo')
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), subset(par,exportName=='Amiggo')[[cur_column()]],.)))
View(params)
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), subset(par,exportName=='Vegga')[[cur_column()]],.)))
for (variety in par$exportName) {print(variety)}
sims <- NULL
setwd("ArchiSimple/src/archisimple93/")
for (variety in par$exportName) {
# Print l'avancé de la boucle
print(paste("Simulation pour :", variety))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), subset(par,exportName==variety)[[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
View(sims)
View(sims)
par[1,]
par[2,]
par <- data.frame(sim_length = rep(140,6),
dmin=c(      0.1567  ,0.1567  ,0.1567   ,0.1567  ,0.1567  ,0.1297),
RDM = c(     0.1874  ,0.2022  ,0.228    ,0.17545 ,0.1745  ,0.1611),
CVDD = c(    0.3     ,0.3     ,0.3      ,0.3     ,0.3     ,0.3))
sims <- NULL
setwd("ArchiSimple/src/archisimple93/")
inc <-0
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
# Print l'avancé de la boucle
print(paste("Simulation pour :", variety))
inc <- inc+1
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), par[inc,][[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
setwd("../../../")
View(sims)
View(params)
View(rs)
params <- read_archisimple_xml("base_parameter.xml")
View(params)
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
# Print l'avancé de la boucle
print(paste("Simulation pour :", variety, "i=", inc))
inc <- inc+1
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), par[inc,][[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
setwd("ArchiSimple/src/archisimple93/")
inc <-0
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
# Print l'avancé de la boucle
print(paste("Simulation pour :", variety, "i=", inc))
inc <- inc+1
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), par[inc,][[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
inc <-0
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
# Print l'avancé de la boucle
inc <- inc+1
print(paste("Simulation pour :", variety, "i=", inc))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), par[inc,][[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
View(params)
sims <- NULL
setwd("ArchiSimple/src/archisimple93/")
inc <-0
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg')) {
# Print l'avancé de la boucle
inc <- inc+1
print(paste("Simulation pour :", variety, "i=", inc))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), par[inc,][[cur_column()]],.)))
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
View(params)
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
# Print l'avancé de la boucle
inc <- inc+1
print(paste("Simulation pour :", variety, "i=", inc))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), par[inc,][[cur_column()]],.)))
print(params)
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
inc <-0
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
# Print l'avancé de la boucle
inc <- inc+1
print(paste("Simulation pour :", variety, "i=", inc))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), par[inc,][[cur_column()]],.)))
print(params)
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
par[1]
par[1,]
par[1,]$sim_length
par[1,]$dmin
par[2,]$dmin
inc <-0
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
# Print l'avancé de la boucle
inc <- inc+1
print(paste("Simulation pour :", variety, "i=", inc))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), par[inc,][[cur_column()]],.)))
print(params)
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
setwd("ArchiSimple/src/archisimple93/")
inc <-0
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
# Print l'avancé de la boucle
inc <- inc+1
print(paste("Simulation pour :", variety, "i=", inc, '========================'))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), par[inc,][[cur_column()]],.)))
print(params)
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
g++ *.cpp -std=c++11 -o archisimple.exe
archisimple.exe
getwd()
rm(list = ls())
library(tidyverse)
library(data.table)
setwd("C:/Nico/Github/Memoire")
source("ArchiSimple/src/io_archisimple.R")
params <- read_archisimple_xml("base_parameter.xml")
par <- data.frame(sim_length = rep(140,6),
dmin=c(      0.1567  ,0.1567  ,0.1567   ,0.1567  ,0.1567  ,0.1297),
RDM = c(     0.1874  ,0.2022  ,0.228    ,0.17545 ,0.1745  ,0.1611),
CVDD = c(    0.3     ,0.3     ,0.3      ,0.3     ,0.3     ,0.3))
sims <- NULL
setwd("ArchiSimple/src/archisimple93/")
inc <-0
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
# Print l'avancé de la boucle
inc <- inc+1
print(paste("Simulation pour :", variety, "i=", inc, '========================'))
#Update les paramètres
params <- params %>%
mutate(across(everything(), ~ ifelse(cur_column() %in% names(par), par[inc,][[cur_column()]],.)))
print(params)
# Créaction du fichier paramètre lu par ArchiSimple
write_archisimple_XML(params, path = "parameter.xml")
# Run ArchiSimple
system("./archisimple")
# Récupère l'output du modèle qui est écrit en txt
rs <- fread("myroot.txt", header = T) %>%
mutate(sim_length = params$sim_length) %>%
mutate(sim = as.factor(variety))
# Stock la simulation dans sims
sims <- rbind(sims, rs)
}
View(sims)
View(sims)
## From the side
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
subset(sims,sim==variety) %>%
ggplot() +
theme_classic() +
geom_segment(aes(x = X1, y = -Z1, xend = X2, yend = -Z2), alpha=0.9) +
coord_fixed()+
labs(title=variety)
}
subset(sims,sim=='Amiggo')
summary(subset(sims,sim=='Amiggo'))
summary(subset(sims,sim=='Vegga'))
subset(sims,sim==variety) %>%
ggplot() +
theme_classic() +
geom_segment(aes(x = X1, y = -Z1, xend = X2, yend = -Z2), alpha=0.9) +
coord_fixed()+
labs(title=variety)
## From the side
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
subset(sims,sim==variety) %>%
ggplot() +
theme_classic() +
geom_segment(aes(x = X1, y = -Z1, xend = X2, yend = -Z2), alpha=0.9) +
coord_fixed()+
labs(title=variety)
}
## From the side
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
subset(sims,sim==variety) %>%
ggplot() +
theme_classic() +
geom_segment(aes(x = X1, y = -Z1, xend = X2, yend = -Z2), alpha=0.9) +
coord_fixed()+
labs(title=variety)
}
## From the side
for (variety in c('Amiggo','Biggben','Hyperion','Juno','Swingg','Vegga')) {
subset(sims,sim==variety) %>%
ggplot() +
theme_classic() +
geom_segment(aes(x = X1, y = -Z1, xend = X2, yend = -Z2), alpha=0.9) +
coord_fixed()+
labs(title=variety)
}
